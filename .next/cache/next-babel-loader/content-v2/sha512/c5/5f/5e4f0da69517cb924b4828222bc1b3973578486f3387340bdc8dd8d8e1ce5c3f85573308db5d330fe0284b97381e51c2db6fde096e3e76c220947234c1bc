{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Wanderley/Desktop/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Wanderley\\\\Desktop\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport styles from '../styles/count-down.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var countdownTimeout;\n  var minute = Math.floor(time / 60); //Arredonda para baixo\n\n  var second = time % 60; //O resto que será os segundos\n\n  var _String$padStart$spli = String(minute).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(second).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1]; //Para parar e continuar o cronometro\n\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setTime(0.1 * 60);\n      console.log(\"Finalizado\");\n    } else setTime(0.1 * 60);\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countDownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        setIsActive(false);\n        clearTimeout(countdownTimeout);\n      },\n      className: styles.CountDownButtonActive,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        setIsActive(true);\n      },\n      className: styles.CountDownButton,\n      children: \"Iniciar um Ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Countdown, \"ocrxlP93zfM61bh38iet/2CNRQY=\");\n\n_c = Countdown;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/Wanderley/Desktop/moveit-next/src/components/Countdown.tsx"],"names":["useEffect","useState","styles","Countdown","time","setTime","isActive","setIsActive","countdownTimeout","minute","Math","floor","second","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","setTimeout","console","log","countDownContainer","clearTimeout","CountDownButtonActive","CountDownButton"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,OAAO,SAASC,SAAT,GAAoB;AAAA;;AAAA,kBAECF,QAAQ,CAAS,MAAM,EAAf,CAFT;AAAA,MAEhBG,IAFgB;AAAA,MAEVC,OAFU;;AAAA,mBAGSJ,QAAQ,CAAU,KAAV,CAHjB;AAAA,MAGhBK,QAHgB;AAAA,MAGNC,WAHM;;AAKvB,MAAIC,gBAAJ;AACA,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWP,IAAI,GAAC,EAAhB,CAAf,CANuB,CAMa;;AACpC,MAAMQ,MAAM,GAAGR,IAAI,GAAG,EAAtB,CAPuB,CAOG;;AAPH,8BAQWS,MAAM,CAACJ,MAAD,CAAN,CAAeK,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CARX;AAAA;AAAA,MAQhBC,UARgB;AAAA,MAQJC,WARI;;AAAA,+BASWJ,MAAM,CAACD,MAAD,CAAN,CAAeE,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CATX;AAAA;AAAA,MAShBG,UATgB;AAAA,MASJC,WATI,8BAWvB;;;AACAnB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIM,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACtBI,MAAAA,gBAAgB,GAAGY,UAAU,CAAC,YAAM;AAChCf,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE3B,IAF2B,CAA7B;AAGH,KAJD,MAIM,IAAGE,QAAQ,IAAIF,IAAI,KAAK,CAAxB,EAA0B;AAC5BC,MAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,KAHK,MAIFjB,OAAO,CAAC,MAAM,EAAP,CAAP;AAEP,GAXQ,EAWN,CAACC,QAAD,EAAWF,IAAX,CAXM,CAAT;AAaA,sBACG;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACqB,kBAAvB;AAAA,8BACG;AAAA,gCACI;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALH,eAMG;AAAA,gCACG;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGb,QAAQ,gBACV;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAG,mBAAM;AAAEC,QAAAA,WAAW,CAAC,KAAD,CAAX;AAAoBiB,QAAAA,YAAY,CAAChB,gBAAD,CAAZ;AAAgC,OAA5F;AACI,MAAA,SAAS,EAAEN,MAAM,CAACuB,qBADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAMV;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAG,mBAAM;AAAElB,QAAAA,WAAW,CAAC,IAAD,CAAX;AAAmB,OAA3D;AACI,MAAA,SAAS,EAAEL,MAAM,CAACwB,eADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBD;AAAA,kBADH;AA2BH;;GApDevB,S;;KAAAA,S;AAoDf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styles from '../styles/count-down.module.css';\r\n\r\nexport function Countdown(){\r\n\r\n    const [time, setTime] = useState<number>(0.1 * 60);\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n\r\n    let countdownTimeout : NodeJS.Timeout;\r\n    const minute = Math.floor(time/60); //Arredonda para baixo\r\n    const second = time % 60; //O resto que será os segundos\r\n    const [minuteLeft, minuteRight] = String(minute).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(second).padStart(2, '0').split('');\r\n\r\n    //Para parar e continuar o cronometro\r\n    useEffect(() => {\r\n        if( isActive && time > 0 ){\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time - 1);\r\n            },1000);\r\n        }else if(isActive && time === 0){\r\n            setTime(0.1 * 60);\r\n            console.log(\"Finalizado\");\r\n        }else\r\n            setTime(0.1 * 60);\r\n    \r\n    }, [isActive, time]);\r\n\r\n    return (\r\n       <>\r\n         <div className={styles.countDownContainer}>\r\n            <div>\r\n                <span>{minuteLeft}</span>\r\n                <span>{minuteRight}</span>\r\n            </div>\r\n            <span>:</span>\r\n            <div>\r\n               <span>{secondLeft}</span>\r\n               <span>{secondRight}</span>\r\n            </div>\r\n            \r\n        </div>\r\n        { isActive ? (\r\n        <button type=\"button\" onClick={ () => { setIsActive(false); clearTimeout(countdownTimeout) } }\r\n            className={styles.CountDownButtonActive}>\r\n            Abandonar ciclo\r\n        </button>\r\n        ) : (\r\n        <button type=\"button\" onClick={ () => { setIsActive(true) } }\r\n            className={styles.CountDownButton}>\r\n            Iniciar um Ciclo\r\n        </button>\r\n        ) }\r\n       </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}