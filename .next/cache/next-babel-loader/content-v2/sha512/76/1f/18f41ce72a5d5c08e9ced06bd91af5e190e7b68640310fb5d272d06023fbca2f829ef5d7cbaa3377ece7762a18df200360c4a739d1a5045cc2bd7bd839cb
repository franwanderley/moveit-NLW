{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wanderley\\\\Desktop\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useEffect, useState } from 'react';\nimport styles from '../styles/count-down.module.css';\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const minute = Math.floor(time / 60); //Arredonda para baixo\n\n  const second = time % 60; //O resto que será os segundos\n\n  const [minuteLeft, minuteRight] = String(minute).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(second).padStart(2, '0').split(''); //Para parar e continuar o cronometro\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countDownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setIsActive(false);\n      },\n      className: styles.CountDownButton,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        setIsActive(true);\n      },\n      className: styles.CountDownButton,\n      children: \"Iniciar um Ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n;","map":{"version":3,"sources":["C:/Users/Wanderley/Desktop/moveit-next/src/components/Countdown.tsx"],"names":["useEffect","useState","styles","Countdown","time","setTime","isActive","setIsActive","minute","Math","floor","second","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","setTimeout","countDownContainer","CountDownButton"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,OAAO,SAASC,SAAT,GAAoB;AAEvB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAS,KAAK,EAAd,CAAhC;AACA,QAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAU,KAAV,CAAxC;AAEA,QAAMO,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAC,EAAhB,CAAf,CALuB,CAKa;;AACpC,QAAMO,MAAM,GAAGP,IAAI,GAAG,EAAtB,CANuB,CAMG;;AAC1B,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACN,MAAD,CAAN,CAAeO,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACH,MAAD,CAAN,CAAeI,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CAAlC,CARuB,CAUvB;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACtBe,MAAAA,UAAU,CAAC,MAAM;AACbd,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAFS,EAER,IAFQ,CAAV;AAGH;AACJ,GANQ,EAMN,CAACE,QAAD,EAAWF,IAAX,CANM,CAAT;AAQA,sBACG;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACkB,kBAAvB;AAAA,8BACG;AAAA,gCACI;AAAA,oBAAOR;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALH,eAMG;AAAA,gCACG;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGZ,QAAQ,gBACV;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAG,MAAM;AAAEC,QAAAA,WAAW,CAAC,KAAD,CAAX;AAAoB,OAA5D;AACI,MAAA,SAAS,EAAEL,MAAM,CAACmB,eADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAMV;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAG,MAAM;AAAEd,QAAAA,WAAW,CAAC,IAAD,CAAX;AAAmB,OAA3D;AACI,MAAA,SAAS,EAAEL,MAAM,CAACmB,eADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBD;AAAA,kBADH;AA2BH;AAAA","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styles from '../styles/count-down.module.css';\r\n\r\nexport function Countdown(){\r\n\r\n    const [time, setTime] = useState<number>(25 * 60);\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n\r\n    const minute = Math.floor(time/60); //Arredonda para baixo\r\n    const second = time % 60; //O resto que será os segundos\r\n    const [minuteLeft, minuteRight] = String(minute).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(second).padStart(2, '0').split('');\r\n\r\n    //Para parar e continuar o cronometro\r\n    useEffect(() => {\r\n        if( isActive && time > 0 ){\r\n            setTimeout(() => {\r\n                setTime(time - 1);\r\n            },1000);\r\n        }\r\n    }, [isActive, time]);\r\n\r\n    return (\r\n       <>\r\n         <div className={styles.countDownContainer}>\r\n            <div>\r\n                <span>{minuteLeft}</span>\r\n                <span>{minuteRight}</span>\r\n            </div>\r\n            <span>:</span>\r\n            <div>\r\n               <span>{secondLeft}</span>\r\n               <span>{secondRight}</span>\r\n            </div>\r\n            \r\n        </div>\r\n        { isActive ? (\r\n        <button type=\"button\" onClick={ () => { setIsActive(false) } }\r\n            className={styles.CountDownButton}>\r\n            Abandonar ciclo\r\n        </button>\r\n        ) : (\r\n        <button type=\"button\" onClick={ () => { setIsActive(true) } }\r\n            className={styles.CountDownButton}>\r\n            Iniciar um Ciclo\r\n        </button>\r\n        ) }\r\n       </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}