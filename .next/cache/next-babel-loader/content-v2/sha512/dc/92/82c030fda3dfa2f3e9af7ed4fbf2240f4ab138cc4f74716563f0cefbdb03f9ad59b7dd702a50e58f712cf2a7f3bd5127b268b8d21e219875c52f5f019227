{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Wanderley/Desktop/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Wanderley\\\\Desktop\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { ChallengesContext } from '../context/ChallengesContext';\nimport styles from '../styles/count-down.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallengs = _useContext.startNewChallengs;\n\n  var countdownTimeout;\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minute = Math.floor(time / 60); //Arredonda para baixo\n\n  var second = time % 60; //O resto que será os segundos\n\n  var _String$padStart$spli = String(minute).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(second).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1]; //Para parar e continuar o cronometro\n\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setTime(0.1 * 60);\n      setIsActive(false);\n      setHasFinished(true);\n      startNewChallengs();\n    } else setTime(0.1 * 60);\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countDownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.CountDownButton,\n      children: \" Ciclo Encerrado \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          setIsActive(false);\n          clearTimeout(countdownTimeout);\n        },\n        className: styles.CountDownButtonActive,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          setIsActive(true);\n        },\n        className: styles.CountDownButton,\n        children: \"Iniciar um Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_s(Countdown, \"mB3YuCsizKBsy/2O2/Pgudh+1lA=\");\n\n_c = Countdown;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/Wanderley/Desktop/moveit-next/src/components/Countdown.tsx"],"names":["useEffect","useState","useContext","ChallengesContext","styles","Countdown","startNewChallengs","countdownTimeout","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minute","Math","floor","second","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","setTimeout","countDownContainer","CountDownButton","clearTimeout","CountDownButtonActive"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from 'react';\r\nimport {ChallengesContext} from '../context/ChallengesContext';\r\nimport styles from '../styles/count-down.module.css';\r\n\r\nexport function Countdown(){\r\n\r\n    const {startNewChallengs} = useContext(ChallengesContext);\r\n    let countdownTimeout : NodeJS.Timeout;\r\n\r\n    const [time, setTime] = useState<number>(0.1 * 60);\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n    const [hasFinished, setHasFinished] = useState<boolean>(false);\r\n\r\n    const minute = Math.floor(time/60); //Arredonda para baixo\r\n    const second = time % 60; //O resto que será os segundos\r\n    const [minuteLeft, minuteRight] = String(minute).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(second).padStart(2, '0').split('');\r\n\r\n    //Para parar e continuar o cronometro\r\n    useEffect(() => {\r\n        if( isActive && time > 0 ){\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time - 1);\r\n            },1000);\r\n        }else if(isActive && time === 0){\r\n            setTime(0.1 * 60);\r\n            setIsActive(false);\r\n            setHasFinished(true);\r\n            startNewChallengs();\r\n        }else\r\n            setTime(0.1 * 60);\r\n    \r\n    }, [isActive, time]);\r\n\r\n    return (\r\n       <>\r\n         <div className={styles.countDownContainer}>\r\n            <div>\r\n                <span>{minuteLeft}</span>\r\n                <span>{minuteRight}</span>\r\n            </div>\r\n            <span>:</span>\r\n            <div>\r\n               <span>{secondLeft}</span>\r\n               <span>{secondRight}</span>\r\n            </div>\r\n            \r\n        </div>\r\n        { hasFinished ? (\r\n            <button disabled  className={styles.CountDownButton}> Ciclo Encerrado </button>\r\n        ) : (\r\n            <>\r\n                { isActive ? (\r\n                    <button type=\"button\" onClick={ () => { setIsActive(false); clearTimeout(countdownTimeout) } }\r\n                        className={styles.CountDownButtonActive}>\r\n                        Abandonar ciclo\r\n                    </button>\r\n                ) : (\r\n                    <button type=\"button\" onClick={ () => { setIsActive(true) } }\r\n                        className={styles.CountDownButton}>\r\n                        Iniciar um Ciclo\r\n                    </button>\r\n                )}\r\n            </> \r\n        )}\r\n\r\n       </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}